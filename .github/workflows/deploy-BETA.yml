---
#
# Documentation:
# https://help.github.com/en/articles/workflow-syntax-for-github-actions
#

#######################################
# Start the job on all push to master #
#######################################
name: 'Build & Deploy - BETA'
on:
  push:
    branches:
      - master

permissions: read-all

concurrency:
  group: ${{ github.ref_name }}-${{ github.workflow }}
  cancel-in-progress: true

###############
# Set the Job #
###############
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write
    environment:
      name: beta
    steps:
      - uses: actions/checkout@v4
        # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v4.0.4
        with:
          node-version: 22.x
      - name: Generate New Release Number
        id: generate-release-number
        run: |
          npm install -g semver
          export OLD_VER=$(semver --coerce $(cat package.json | jq .version))
          export NEW_VER=$(semver --coerce $(cat package.json | jq .version) --increment patch)
          echo "NEW_VER=$(echo $NEW_VER)" >> "$GITHUB_OUTPUT"
      - name: Install dependencies
        run: |
          export NEW_VER=${{ steps.generate-release-number.outputs.NEW_VER }}
          jq --arg NEW_VER "$NEW_VER" '.version = $NEW_VER' package.json > tmp.json
          rm package.json
          mv tmp.json package.json
          npm install
          git config --global user.name ${{ vars.USER_NAME }}
          git config --global user.email ${{ vars.USER_EMAIL }}
          git add .
          git commit -m "chore(release): ${{ steps.generate-release-number.outputs.NEW_VER }} [skip ci]" --no-verify
          git push origin master
          git tag v${{ steps.generate-release-number.outputs.NEW_VER }}
          git push --tags
      - name: Setup Dependencies
        run: |
          npm ci
          npm install -g @vscode/vsce ovsx
      - name: Compile VSIX
        run: npm run build:beta
      - name: Publish VSCE Marketplace
        run: vsce publish --pat ${{ secrets.VSCE_PAT }} -i $(ls -all | grep "flow-linter-vsx" | awk '{print $9}') --pre-release
      - name: Publish OpenVSX Registry
        run: ovsx publish --pat ${{ secrets.OVSX_PAT }} -i $(ls -all | grep "flow-linter-vsx" | awk '{print $9}') --pre-release
